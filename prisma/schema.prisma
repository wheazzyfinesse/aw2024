generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  email     String    @unique
  name      String
  password  String
  image     String
  posts     Post[]
  gifts     Gift[]
  messages  Message[]
  comments  Comment[]
  createdAt DateTime  @default(now())
}

model Post {
  id        String          @id @default(auto()) @map("_id") @db.ObjectId
  imageUrl  String
  post      String?
  isPrivate Boolean         @default(false)
  location  WeddingLocation
  userId    String          @db.ObjectId
  User      User            @relation(fields: [userId], references: [id])
  comment   Comment[]       @relation("PostComments")
  createdAt DateTime        @default(now())
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  userId    String   @db.ObjectId
  User      User     @relation(fields: [userId], references: [id])
  postId    String   @db.ObjectId
  Post      Post     @relation("PostComments", fields: [postId], references: [id])
  createdAt DateTime @default(now())
}

model Gift {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  amount    Float
  message   String
  userId    String   @db.ObjectId
  User      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model Message {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  userId    String   @db.ObjectId
  User      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

enum WeddingLocation {
  RECEPTION
  AFTERPARTY
  BRIDAL_SHOWER
  CEREMONY
}
